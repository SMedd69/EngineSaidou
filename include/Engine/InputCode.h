#ifndef _INPUTKEY_H_
#define _INPUTKEY_H_
#include <iostream>
#include <type_traits>
enum class InputCode
{
	/* The unknown input */
	E_UNKNOWN = -1,

	/* Printable keys */
	E_KEY_SPACE = 32,
	E_KEY_APOSTROPHE = 39,  /* ' */
	E_KEY_COMMA = 44,  /* , */
	E_KEY_MINUS = 45,  /* - */
	E_KEY_PERIOD = 46,  /* . */
	E_KEY_SLASH = 47,  /* / */
	E_KEY_0 = 48,
	E_KEY_1 = 49,
	E_KEY_2 = 50,
	E_KEY_3 = 51,
	E_KEY_4 = 52,
	E_KEY_5 = 53,
	E_KEY_6 = 54,
	E_KEY_7 = 55,
	E_KEY_8 = 56,
	E_KEY_9 = 57,
	E_KEY_SEMICOLON = 59,  /* ; */
	E_KEY_EQUAL = 61,  /* = */
	E_KEY_A = 65,
	E_KEY_B = 66,
	E_KEY_C = 67,
	E_KEY_D = 68,
	E_KEY_E = 69,
	E_KEY_F = 70,
	E_KEY_G = 71,
	E_KEY_H = 72,
	E_KEY_I = 73,
	E_KEY_J = 74,
	E_KEY_K = 75,
	E_KEY_L = 76,
	E_KEY_M = 77,
	E_KEY_N = 78,
	E_KEY_O = 79,
	E_KEY_P = 80,
	E_KEY_Q = 81,
	E_KEY_R = 82,
	E_KEY_S = 83,
	E_KEY_T = 84,
	E_KEY_U = 85,
	E_KEY_V = 86,
	E_KEY_W = 87,
	E_KEY_X = 88,
	E_KEY_Y = 89,
	E_KEY_Z = 90,
	E_KEY_LEFT_BRACKET = 91,  /* [ */
	E_KEY_BACKSLASH = 92,  /* \ */
	E_KEY_RIGHT_BRACKET = 93,  /* ] */
	E_KEY_GRAVE_ACCENT = 96,  /* ` */
	E_KEY_WORLD_1 = 161, /* non-US #1 */
	E_KEY_WORLD_2 = 162, /* non-US #2 */

	/* Function keys */
	E_KEY_ESCAPE = 256,
	E_KEY_ENTER = 257,
	E_KEY_TAB = 258,
	E_KEY_BACKSPACE = 259,
	E_KEY_INSERT = 260,
	E_KEY_DELETE = 261,
	E_KEY_RIGHT = 262,
	E_KEY_LEFT = 263,
	E_KEY_DOWN = 264,
	E_KEY_UP = 265,
	E_KEY_PAGE_UP = 266,
	E_KEY_PAGE_DOWN = 267,
	E_KEY_HOME = 268,
	E_KEY_END = 269,
	E_KEY_CAPS_LOCK = 280,
	E_KEY_SCROLL_LOCK = 281,
	E_KEY_NUM_LOCK = 282,
	E_KEY_PRINT_SCREEN = 283,
	E_KEY_PAUSE = 284,
	E_KEY_F1 = 290,
	E_KEY_F2 = 291,
	E_KEY_F3 = 292,
	E_KEY_F4 = 293,
	E_KEY_F5 = 294,
	E_KEY_F6 = 295,
	E_KEY_F7 = 296,
	E_KEY_F8 = 297,
	E_KEY_F9 = 298,
	E_KEY_F10 = 299,
	E_KEY_F11 = 300,
	E_KEY_F12 = 301,
	E_KEY_F13 = 302,
	E_KEY_F14 = 303,
	E_KEY_F15 = 304,
	E_KEY_F16 = 305,
	E_KEY_F17 = 306,
	E_KEY_F18 = 307,
	E_KEY_F19 = 308,
	E_KEY_F20 = 309,
	E_KEY_F21 = 310,
	E_KEY_F22 = 311,
	E_KEY_F23 = 312,
	E_KEY_F24 = 313,
	E_KEY_F25 = 314,
	E_KEY_KP_0 = 320,
	E_KEY_KP_1 = 321,
	E_KEY_KP_2 = 322,
	E_KEY_KP_3 = 323,
	E_KEY_KP_4 = 324,
	E_KEY_KP_5 = 325,
	E_KEY_KP_6 = 326,
	E_KEY_KP_7 = 327,
	E_KEY_KP_8 = 328,
	E_KEY_KP_9 = 329,
	E_KEY_KP_DECIMAL = 330,
	E_KEY_KP_DIVIDE = 331,
	E_KEY_KP_MULTIPLY = 332,
	E_KEY_KP_SUBTRACT = 333,
	E_KEY_KP_ADD = 334,
	E_KEY_KP_ENTER = 335,
	E_KEY_KP_EQUAL = 336,
	E_KEY_LEFT_SHIFT = 340,
	E_KEY_LEFT_CONTROL = 341,
	E_KEY_LEFT_ALT = 342,
	E_KEY_LEFT_SUPER = 343,
	E_KEY_RIGHT_SHIFT = 344,
	E_KEY_RIGHT_CONTROL = 345,
	E_KEY_RIGHT_ALT = 346,
	E_KEY_RIGHT_SUPER = 347,
	E_KEY_MENU = 348,

	E_MOUSE_BUTTON_1 = 349,
	E_MOUSE_BUTTON_2 = 350,
	E_MOUSE_BUTTON_3 = 351,
	E_MOUSE_BUTTON_4 = 352,
	E_MOUSE_BUTTON_5 = 353,
	E_MOUSE_BUTTON_6 = 354,
	E_MOUSE_BUTTON_7 = 355,
	E_MOUSE_BUTTON_8 = 356,
	E_MOUSE_POS_X = 357,
	E_MOUSE_POS_Y = 358,
	E_MOUSE_SCROLL_X = 359,
	E_MOUSE_SCROLL_Y = 360,
	E_MOUSE_LAST_BUTTON = E_MOUSE_BUTTON_8,
	E_MOUSE_BUTTON_LEFT = E_MOUSE_BUTTON_1,
	E_MOUSE_BUTTON_RIGHT = E_MOUSE_BUTTON_2,
	E_MOUSE_BUTTON_MIDDLE = E_MOUSE_BUTTON_3,


	E_INPUT_CODE_LAST = E_MOUSE_SCROLL_Y,
};

enum class InputMouseCode
{
	E_MOUSE_BUTTON_1 =		(int)InputCode::E_MOUSE_BUTTON_1,
	E_MOUSE_BUTTON_2 =		(int)InputCode::E_MOUSE_BUTTON_2,
	E_MOUSE_BUTTON_3 =		(int)InputCode::E_MOUSE_BUTTON_3,
	E_MOUSE_BUTTON_4 =		(int)InputCode::E_MOUSE_BUTTON_4,
	E_MOUSE_BUTTON_5 =		(int)InputCode::E_MOUSE_BUTTON_5,
	E_MOUSE_BUTTON_6 =		(int)InputCode::E_MOUSE_BUTTON_6,
	E_MOUSE_BUTTON_7 =		(int)InputCode::E_MOUSE_BUTTON_7,
	E_MOUSE_BUTTON_8 =		(int)InputCode::E_MOUSE_BUTTON_8,
	E_MOUSE_POS_X =			(int)InputCode::E_MOUSE_POS_X,
	E_MOUSE_POS_Y =			(int)InputCode::E_MOUSE_POS_Y,
	E_MOUSE_SCROLL_X =		(int)InputCode::E_MOUSE_SCROLL_X,
	E_MOUSE_SCROLL_Y =		(int)InputCode::E_MOUSE_SCROLL_Y,
	E_MOUSE_LAST_BUTTON =	E_MOUSE_BUTTON_8,
	E_MOUSE_BUTTON_LEFT =	E_MOUSE_BUTTON_1,
	E_MOUSE_BUTTON_RIGHT =	E_MOUSE_BUTTON_2,
	E_MOUSE_BUTTON_MIDDLE = E_MOUSE_BUTTON_3,
	E_MOUSE_LAST =			E_MOUSE_SCROLL_Y,

};

enum class InputKeyCode
{
	/* Printable keys */
	E_KEY_SPACE = (int)InputCode::E_KEY_SPACE,
	E_KEY_APOSTROPHE = (int)InputCode::E_KEY_APOSTROPHE,  /* ' */
	E_KEY_COMMA = (int)InputCode::E_KEY_COMMA,  /* , */
	E_KEY_MINUS = (int)InputCode::E_KEY_MINUS,  /* - */
	E_KEY_PERIOD = (int)InputCode::E_KEY_PERIOD,  /* . */
	E_KEY_SLASH = (int)InputCode::E_KEY_SLASH,  /* / */
	E_KEY_0 = (int)InputCode::E_KEY_0,
	E_KEY_1 = (int)InputCode::E_KEY_1,
	E_KEY_2 = (int)InputCode::E_KEY_2,
	E_KEY_3 = (int)InputCode::E_KEY_3,
	E_KEY_4 = (int)InputCode::E_KEY_4,
	E_KEY_5 = (int)InputCode::E_KEY_5,
	E_KEY_6 = (int)InputCode::E_KEY_6,
	E_KEY_7 = (int)InputCode::E_KEY_7,
	E_KEY_8 = (int)InputCode::E_KEY_8,
	E_KEY_9 = (int)InputCode::E_KEY_9,
	E_KEY_SEMICOLON = (int)InputCode::E_KEY_SEMICOLON,  /* ; */
	E_KEY_EQUAL = (int)InputCode::E_KEY_EQUAL,  /* = */
	E_KEY_A = (int)InputCode::E_KEY_A,
	E_KEY_B = (int)InputCode::E_KEY_B,
	E_KEY_C = (int)InputCode::E_KEY_C,
	E_KEY_D = (int)InputCode::E_KEY_D,
	E_KEY_E = (int)InputCode::E_KEY_E,
	E_KEY_F = (int)InputCode::E_KEY_F,
	E_KEY_G = (int)InputCode::E_KEY_G,
	E_KEY_H = (int)InputCode::E_KEY_H,
	E_KEY_I = (int)InputCode::E_KEY_I,
	E_KEY_J = (int)InputCode::E_KEY_J,
	E_KEY_K = (int)InputCode::E_KEY_K,
	E_KEY_L = (int)InputCode::E_KEY_L,
	E_KEY_M = (int)InputCode::E_KEY_M,
	E_KEY_N = (int)InputCode::E_KEY_N,
	E_KEY_O = (int)InputCode::E_KEY_O,
	E_KEY_P = (int)InputCode::E_KEY_P,
	E_KEY_Q = (int)InputCode::E_KEY_Q,
	E_KEY_R = (int)InputCode::E_KEY_R,
	E_KEY_S = (int)InputCode::E_KEY_S,
	E_KEY_T = (int)InputCode::E_KEY_T,
	E_KEY_U = (int)InputCode::E_KEY_U,
	E_KEY_V = (int)InputCode::E_KEY_V,
	E_KEY_W = (int)InputCode::E_KEY_W,
	E_KEY_X = (int)InputCode::E_KEY_X,
	E_KEY_Y = (int)InputCode::E_KEY_Y,
	E_KEY_Z = (int)InputCode::E_KEY_Z,
	E_KEY_LEFT_BRACKET = (int)InputCode::E_KEY_LEFT_BRACKET,  /* [ */
	E_KEY_BACKSLASH = (int)InputCode::E_KEY_BACKSLASH,  /* \ */
	E_KEY_RIGHT_BRACKET = (int)InputCode::E_KEY_RIGHT_BRACKET,  /* ] */
	E_KEY_GRAVE_ACCENT = (int)InputCode::E_KEY_GRAVE_ACCENT,  /* ` */
	E_KEY_WORLD_1 = (int)InputCode::E_KEY_WORLD_1, /* non-US #1 */
	E_KEY_WORLD_2 = (int)InputCode::E_KEY_WORLD_2, /* non-US #2 */

	/* Function keys */
	E_KEY_ESCAPE = (int)InputCode::E_KEY_ESCAPE,
	E_KEY_ENTER = (int)InputCode::E_KEY_ENTER,
	E_KEY_TAB = (int)InputCode::E_KEY_TAB,
	E_KEY_BACKSPACE = (int)InputCode::E_KEY_BACKSPACE,
	E_KEY_INSERT = (int)InputCode::E_KEY_INSERT,
	E_KEY_DELETE = (int)InputCode::E_KEY_DELETE,
	E_KEY_RIGHT = (int)InputCode::E_KEY_RIGHT,
	E_KEY_LEFT = (int)InputCode::E_KEY_LEFT,
	E_KEY_DOWN = (int)InputCode::E_KEY_DOWN,
	E_KEY_UP = (int)InputCode::E_KEY_UP,
	E_KEY_PAGE_UP = (int)InputCode::E_KEY_PAGE_UP,
	E_KEY_PAGE_DOWN = (int)InputCode::E_KEY_PAGE_DOWN,
	E_KEY_HOME = (int)InputCode::E_KEY_HOME,
	E_KEY_END = (int)InputCode::E_KEY_END,
	E_KEY_CAPS_LOCK = (int)InputCode::E_KEY_CAPS_LOCK,
	E_KEY_SCROLL_LOCK = (int)InputCode::E_KEY_SCROLL_LOCK,
	E_KEY_NUM_LOCK = (int)InputCode::E_KEY_NUM_LOCK,
	E_KEY_PRINT_SCREEN = (int)InputCode::E_KEY_PRINT_SCREEN,
	E_KEY_PAUSE = (int)InputCode::E_KEY_PAUSE,
	E_KEY_F1 = (int)InputCode::E_KEY_F1,
	E_KEY_F2 = (int)InputCode::E_KEY_F2,
	E_KEY_F3 = (int)InputCode::E_KEY_F3,
	E_KEY_F4 = (int)InputCode::E_KEY_F4,
	E_KEY_F5 = (int)InputCode::E_KEY_F5,
	E_KEY_F6 = (int)InputCode::E_KEY_F6,
	E_KEY_F7 = (int)InputCode::E_KEY_F7,
	E_KEY_F8 = (int)InputCode::E_KEY_F8,
	E_KEY_F9 = (int)InputCode::E_KEY_F9,
	E_KEY_F10 = (int)InputCode::E_KEY_F10,
	E_KEY_F11 = (int)InputCode::E_KEY_F11,
	E_KEY_F12 = (int)InputCode::E_KEY_F12,
	E_KEY_F13 = (int)InputCode::E_KEY_F13,
	E_KEY_F14 = (int)InputCode::E_KEY_F14,
	E_KEY_F15 = (int)InputCode::E_KEY_F15,
	E_KEY_F16 = (int)InputCode::E_KEY_F16,
	E_KEY_F17 = (int)InputCode::E_KEY_F17,
	E_KEY_F18 = (int)InputCode::E_KEY_F18,
	E_KEY_F19 = (int)InputCode::E_KEY_F19,
	E_KEY_F20 = (int)InputCode::E_KEY_F20,
	E_KEY_F21 = (int)InputCode::E_KEY_F21,
	E_KEY_F22 = (int)InputCode::E_KEY_F22,
	E_KEY_F23 = (int)InputCode::E_KEY_F23,
	E_KEY_F24 = (int)InputCode::E_KEY_F24,
	E_KEY_F25 = (int)InputCode::E_KEY_F25,
	E_KEY_KP_0 = (int)InputCode::E_KEY_KP_0,
	E_KEY_KP_1 = (int)InputCode::E_KEY_KP_1,
	E_KEY_KP_2 = (int)InputCode::E_KEY_KP_2,
	E_KEY_KP_3 = (int)InputCode::E_KEY_KP_3,
	E_KEY_KP_4 = (int)InputCode::E_KEY_KP_4,
	E_KEY_KP_5 = (int)InputCode::E_KEY_KP_5,
	E_KEY_KP_6 = (int)InputCode::E_KEY_KP_6,
	E_KEY_KP_7 = (int)InputCode::E_KEY_KP_7,
	E_KEY_KP_8 = (int)InputCode::E_KEY_KP_8,
	E_KEY_KP_9 = (int)InputCode::E_KEY_KP_9,
	E_KEY_KP_DECIMAL = (int)InputCode::E_KEY_KP_DECIMAL,
	E_KEY_KP_DIVIDE = (int)InputCode::E_KEY_KP_DIVIDE,
	E_KEY_KP_MULTIPLY = (int)InputCode::E_KEY_KP_MULTIPLY,
	E_KEY_KP_SUBTRACT = (int)InputCode::E_KEY_KP_SUBTRACT,
	E_KEY_KP_ADD = (int)InputCode::E_KEY_KP_ADD,
	E_KEY_KP_ENTER = (int)InputCode::E_KEY_KP_ENTER,
	E_KEY_KP_EQUAL = (int)InputCode::E_KEY_KP_EQUAL,
	E_KEY_LEFT_SHIFT = (int)InputCode::E_KEY_LEFT_SHIFT,
	E_KEY_LEFT_CONTROL = (int)InputCode::E_KEY_LEFT_CONTROL,
	E_KEY_LEFT_ALT = (int)InputCode::E_KEY_LEFT_ALT,
	E_KEY_LEFT_SUPER = (int)InputCode::E_KEY_LEFT_SUPER,
	E_KEY_RIGHT_SHIFT = (int)InputCode::E_KEY_RIGHT_SHIFT,
	E_KEY_RIGHT_CONTROL = (int)InputCode::E_KEY_RIGHT_CONTROL,
	E_KEY_RIGHT_ALT = (int)InputCode::E_KEY_RIGHT_ALT,
	E_KEY_RIGHT_SUPER = (int)InputCode::E_KEY_RIGHT_SUPER,
	E_KEY_MENU = (int)InputCode::E_KEY_MENU,
	E_KEY_LAST = E_KEY_MENU
};

#endif
